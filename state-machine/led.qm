<?xml version="1.0" encoding="UTF-8"?>
<model version="5.3.0" links="0">
 <framework name="qpc"/>
 <package name="base" stereotype="0x00">
  <class name="qm_led" superclass="qpc::QActive">
   <attribute name="timer" type="QTimeEvt" visibility="0x00" properties="0x00"/>
   <statechart properties="0x01">
    <initial target="../2">
     <action>QActive_subscribe((QActive *)me, ACTIVATE_ACTOR_SIG);
QActive_subscribe((QActive *)me, DEACTIVATE_ACTOR_SIG);


QActive_subscribe((QActive *)me, LED_INIT_SIG);</action>
     <initial_glyph conn="14,12,5,0,4,2">
      <action box="0,-2,10,2"/>
     </initial_glyph>
    </initial>
    <state name="init">
     <entry>LOG(&quot;led init&quot;);

led_init();

</entry>
     <initial target="../2">
      <initial_glyph conn="48,22,5,0,4,2">
       <action box="0,-2,10,2"/>
      </initial_glyph>
     </initial>
     <tran trig="DEACTIVATE_ACTOR" target="../../2">
      <tran_glyph conn="36,24,3,3,-22">
       <action box="-20,-2,16,2"/>
      </tran_glyph>
     </tran>
     <state name="slow_blink">
      <entry>QTimeEvt_armX(&amp;me-&gt;timer,  BSP_TICKS_PER_SEC, BSP_TICKS_PER_SEC);</entry>
      <exit>QTimeEvt_disarm(&amp;me-&gt;timer);</exit>
      <initial target="../1">
       <initial_glyph conn="54,30,5,0,5,2">
        <action box="0,-2,10,2"/>
       </initial_glyph>
      </initial>
      <state name="s_on">
       <entry>
LOG(&quot;led on&quot;);

led_switch(true);

//adc_get_value();

//adc_convert();</entry>
       <tran trig="LED_TIMEOUT" target="../../2">
        <tran_glyph conn="52,38,3,3,20">
         <action box="0,-2,12,2"/>
        </tran_glyph>
       </tran>
       <state_glyph node="52,32,16,16">
        <entry box="1,2,6,2"/>
       </state_glyph>
      </state>
      <state name="s_off">
       <entry>
//LOG(&quot;led off&quot;);

led_switch(false);</entry>
       <tran trig="LED_TIMEOUT" target="../../1">
        <tran_glyph conn="88,42,1,1,-20">
         <action box="-14,-2,13,2"/>
        </tran_glyph>
       </tran>
       <state_glyph node="72,32,16,16">
        <entry box="1,2,6,2"/>
       </state_glyph>
      </state>
      <state_glyph node="46,24,48,29">
       <entry box="1,2,6,2"/>
       <exit box="1,4,6,2"/>
      </state_glyph>
     </state>
     <state_glyph node="36,14,68,48">
      <entry box="1,2,6,2"/>
     </state_glyph>
    </state>
    <state name="reset">
     <entry>LOG(&quot;qm_led reset&quot;);</entry>
     <tran trig="ACTIVATE_ACTOR" target="../../1">
      <tran_glyph conn="14,22,3,3,22">
       <action box="0,-2,11,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="14,14,16,22">
      <entry box="1,2,6,2"/>
     </state_glyph>
    </state>
    <state_diagram size="146,106"/>
   </statechart>
  </class>
  <attribute name="ao_qm_led" type="QActive * const" visibility="0x00" properties="0x00"/>
  <operation name="qm_led_ctor" type="void" visibility="0x00" properties="0x00">
   <code>qm_led *me = &amp;l_qm_led;

QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;qm_led_initial));

QTimeEvt_ctorX (&amp;me-&gt;timer, &amp;me-&gt;super, LED_TIMEOUT_SIG, 0U);
</code>
  </operation>
 </package>
 <directory name="../">
  <directory name="include">
   <directory name="qm">
    <file name="qm_led.h">
     <text>#ifndef __QM_LED_H__
#define __QM_LED_H__

#include &quot;qm/qm_types.h&quot;

QM_BEGIN_DECL

$declare(base::ao_qm_led)

$declare(base::qm_led_ctor)

QM_END_DECL
#endif
</text>
    </file>
   </directory>
  </directory>
  <directory name="src">
   <directory name="qm">
    <file name="qm_led.cpp">
     <text>#include &quot;qm/qm_led.h&quot;
#include &quot;qm/qm_common.h&quot;

$declare(base::qm_led)


static qm_led l_qm_led;

QActive* const ao_qm_led = (QActive*)&amp;l_qm_led;

$define(base::qm_led_ctor)
$define(base::qm_led)
</text>
    </file>
   </directory>
  </directory>
 </directory>
</model>
